<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
	<context:property-placeholder location="classpath:db.properties" />
	<!-- 扫描指定包下的注解,不写的话不能正常的进行依赖注入 -->
	<context:component-scan base-package="com.bx.ssh2"></context:component-scan>
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${hibernate.driver}"></property>
		<property name="url" value="${hibernate.url}"></property>
		<property name="username" value="${hibernate.username}"></property>
		<property name="password" value="${hibernate.password}"></property>
	</bean>
	<!-- 声明式事务管理 -->
	<!-- 配置事务管理器 -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 配置事务通知 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<!-- 配置哪些方法使用什么样的事务，配置事务的传播特性 -->
			<!-- 事务的几种传播特性 1. PROPAGATION_REQUIRED: 如果存在一个事务，则支持当前事务。如果没有事务则开启 2. 
				PROPAGATION_SUPPORTS: 如果存在一个事务，支持当前事务。如果没有事务，则非事务的执行 3. PROPAGATION_MANDATORY: 
				如果已经存在一个事务，支持当前事务。如果没有一个活动的事务，则抛出异常。 4. PROPAGATION_REQUIRES_NEW: 总是开启一个新的事务。如果一个事务已经存在，则将这个存在的事务挂起。 
				5. PROPAGATION_NOT_SUPPORTED: 总是非事务地执行，并挂起任何存在的事务。 6. PROPAGATION_NEVER: 
				总是非事务地执行，如果存在一个活动事务，则抛出异常 7. PROPAGATION_NESTED：如果一个活动的事务存在，则运行在一个嵌套的事务中. 
				如果没有活动事务, 则按TransactionDefinition.PROPAGATION_REQUIRED 属性执行 -->
			<tx:method name="get*" read-only="true"/>
			<tx:method name="find*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="load*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="remove*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
	<!-- 配置aop注解方式 -->
	<tx:annotation-driven transaction-manager="txManager" />
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="packagesToScan">
			<list>
				<value>com.bx.ssh2.*</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=${hibernate.dialect}
				hibernate.hbm2ddl.auto = ${hibernate.hbm2ddl.auto}
				hibernate.show_sql=${hibernate.show_sql}
				hibernate.format_sql = ${hibernate.format_sql}
			</value>
		</property>
	</bean>

</beans>